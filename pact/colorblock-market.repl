;; -----------------------------
;; Prepare
;; -----------------------------

(begin-tx)

(define-namespace 'test (sig-keyset) (sig-keyset))
(env-data {
  "ns": "test",
  "admin-keyset": {"keys": ["admin"]},
  "alice-keyset": {"keys": ["alice"]},
  "bob-keyset": {"keys": ["bob"]},
  "lucy-keyset": {"keys": ["lucy"]},
  "upgrade": false
})
(load "poly-fungible-v1.pact")

(load "fungible-util.pact")

(load "coin/fungible-v1.pact")
(load "coin/coin.pact")
(load "colorblock.pact")

(load "colorblock-market.pact")

(commit-tx)

(begin-tx)
(namespace 'test)

;; -----------------------------
;; Account
;; -----------------------------

;
; create account in COIN module
;
(coin.create-account "admin" (read-keyset "admin-keyset"))
(coin.create-account "bob" (read-keyset "bob-keyset"))
(coin.create-account "alice" (read-keyset "alice-keyset"))
(coin.create-account "lucy" (read-keyset "lucy-keyset"))

(env-sigs [{"key": "admin", "caps": [(colorblock.MINT "item-id" "admin")]}])
(colorblock.create-item "item-id" "title" "aaaaaabbbbbbccccccdddddd" 2 2 1 [1.0] "admin" 1.0 (read-keyset "admin-keyset"))
(colorblock.create-account "item-id" "bob" (read-keyset "bob-keyset"))

(commit-tx)

;; -----------------------------
;; interact with market
;; -----------------------------


(begin-tx)
(namespace 'test)

;
; release
;

(env-sigs [{"key": "admin", "caps": []}])
(expect-failure
  "Release will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [admin]"
  (colorblock-market.release "item-id" "admin" 10.0 1.0)
)
(env-sigs [{"key": "admin", "caps": [(colorblock.TRANSFER "item-id" "bob" "colorblock-market-pool" 1.0)]}])
(expect-failure
  "Release will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [admin]"
  (colorblock-market.release "item-id" "admin" 10.0 1.0)
)
(env-sigs [{"key": "bob", "caps": [(colorblock.TRANSFER "item-id" "bob" "colorblock-market-pool" 1.0)]}])
(expect-failure
  "Release will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [admin]"
  (colorblock-market.release "item-id" "admin" 10.0 1.0)
)
(env-sigs [{"key": "admin", "caps": [(colorblock.TRANSFER "item-id-other" "admin" "colorblock-market-pool" 1.0)]}])
(expect-failure
  "Release will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [admin]"
  (colorblock-market.release "item-id" "admin" 10.0 1.0)
)
(env-sigs [{"key": "admin", "caps": [(colorblock.TRANSFER "item-id" "admin" "cccccmarket" 1.0)]}])
(expect-failure
  "Release will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [admin]"
  (colorblock-market.release "item-id" "admin" 10.0 1.0)
)
(env-sigs [{"key": "admin", "caps": [(colorblock.TRANSFER "item-id" "admin" "colorblock-market-pool" 1.2)]}])
(expect-failure
  "Release will fail as amount is not integer"
  "precision violation"
  (colorblock-market.release "item-id" "admin" 10.0 1.2)
)
(env-sigs [{"key": "admin", "caps": [(colorblock.TRANSFER "item-id" "admin" "colorblock-market-pool" 2.0)]}])
(expect-failure
  "Release will fail as balance is not enough for amount"
  "Insufficient funds"
  (colorblock-market.release "item-id" "admin" 10.0 2.0)
)
(env-sigs [{"key": "admin", "caps": [(colorblock.TRANSFER "item-id" "admin" "colorblock-market-pool" 1.0)]}])
(expect
  "Release will succeed with correct capability"
  "Write succeeded"
  (colorblock-market.release "item-id" "admin" 10.0 1.0)
)

(expect
  "Check release result"
  {
    "token": "item-id",
    "seller": "admin",
    "price": 10.0,
    "total": 1.0,
    "remain": 1.0,
    "open": true
  }
  (colorblock-market.item-sale-status "item-id" "admin")
)
(expect
  "Check release result"
  0.0
  (colorblock.get-balance "item-id" "admin")
)
(expect
  "Check release result"
  1.0
  (colorblock.get-balance "item-id" "colorblock-market-pool")
)


;
; recall
;

(env-sigs [{"key": "admin", "caps": []}])
(expect-failure
  "Recall will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [admin]"
  (colorblock-market.recall "item-id" "admin")
)

(env-sigs [{"key": "admin", "caps": [
  (colorblock.TRANSFER "item-id" "colorblock-market-pool" "admin" 1.0)
]}])
(expect-failure
  "Recall will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [admin]"
  (colorblock-market.recall "item-id" "admin")
)

(env-sigs [{"key": "admin", "caps": [
  (colorblock.MINT "item-id" "admin")
]}])
(expect
  "Recall will succeed with correct capabilities"
  "Write succeeded"
  (colorblock-market.recall "item-id" "admin")
)

(expect
  "Check recall result"
  {
    "token": "item-id",
    "seller": "admin",
    "price": 10.0,
    "total": 0.0,
    "remain": 0.0,
    "open": false
  }
  (colorblock-market.item-sale-status "item-id" "admin")
)

(expect
  "Check release result"
  1.0
  (colorblock.get-balance "item-id" "admin")
)
(expect
  "Check release result"
  0.0
  (colorblock.get-balance "item-id" "colorblock-market-pool")
)

(commit-tx)

(begin-tx)
(namespace 'test)

; Release again
(env-sigs [{"key": "admin", "caps": [(colorblock.TRANSFER "item-id" "admin" "colorblock-market-pool" 1.0)]}])
(colorblock-market.release "item-id" "admin" 10.0 1.0)


;
; purchase
;

; add-balance
(test-capability (coin.CREDIT "alice"))
(coin.credit "alice" (read-keyset "alice-keyset") 12.0)

(env-sigs [{"key": "admin", "caps": []}])
(expect-failure
  "Purchase will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [bob]"
  (colorblock-market.purchase "item-id" "bob" "admin" 1.0)
)

(env-sigs [{"key": "bob", "caps": []}])
(expect-failure
  "Purchase will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [bob]"
  (colorblock-market.purchase "item-id" "bob" "admin" 1.0)
)

(env-sigs [{"key": "bob", "caps": [(colorblock.TRANSFER "item-id" "colorblock-market-pool" "bob" 1.0)]}])
(expect-failure
  "Purchase will fail as managed cap hasn't been installed correctly in sig"
  "Keyset failure (keys-all): [bob]"
  (colorblock-market.purchase "item-id" "bob" "admin" 1.0)
)

(env-sigs [{"key": "alice", "caps": [
  (coin.TRANSFER "alice" "colorblock-market-pool" 0.1)
  (coin.TRANSFER "alice" "admin" 10.0)
  (colorblock.TRANSFER "item-id" "colorblock-market-pool" "alice" 1.0)
]}])
(expect-failure
  "Purchase will fail as there has no record in ledger"
  "row not found: item-id:alice"
  (colorblock-market.purchase "item-id" "alice" "admin" 1.0)
)

(env-sigs [{"key": "alice", "caps": [
  (colorblock.MINT "item-id" "alice")
  (coin.TRANSFER "alice" "colorblock-market-pool" 0.1)
  (coin.TRANSFER "alice" "admin" 10.0)
  (colorblock.TRANSFER "item-id" "colorblock-market-pool" "alice" 1.0)
]}])
(expect-failure
  "Purchase will fail as precision is illegal"
  "precision violation"
  (colorblock-market.purchase-new-account "item-id" "alice" "admin" 1.2 (read-keyset "alice-keyset"))
)
(expect-failure
  "Purchase will fail as purchase amount is illegal"
  "Purchase amount cannot be larger than remain amount"
  (colorblock-market.purchase-new-account "item-id" "alice" "admin" 2.0 (read-keyset "alice-keyset"))
)

(expect
  "Purchase-new-account will succeed with correct capabilities"
  "Write succeeded"
  (colorblock-market.purchase-new-account "item-id" "alice" "admin" 1.0 (read-keyset "alice-keyset"))
)

(expect
  "Check recall result"
  {
    "token": "item-id",
    "seller": "admin",
    "price": 10.0,
    "total": 1.0,
    "remain": 0.0,
    "open": false
  }
  (colorblock-market.item-sale-status "item-id" "admin")
)

(expect
  "Check release result"
  0.0
  (colorblock.get-balance "item-id" "admin")
)
(expect
  "Check release result"
  0.0
  (colorblock.get-balance "item-id" "colorblock-market-pool")
)
(expect
  "Check release result"
  10.0
  (coin.get-balance "admin")
)
(expect
  "Check release result"
  0.1
  (coin.get-balance "colorblock-market-pool")
)
(expect
  "Check release result"
  1.9
  (coin.get-balance "alice")
)
